{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Documents/dockerized-app/src/components/Second.js\";\nimport React from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.post('/user/login', {\n        username: this.state.username,\n        password: this.state.password\n      }).then(response => {\n        console.log('login response: ');\n        console.log(response);\n\n        if (response.status === 200) {\n          // update App.js state\n          this.props.updateUser({\n            loggedIn: true,\n            username: response.data.username\n          }); // update the state to redirect to home\n\n          this.setState({\n            redirectTo: '/'\n          });\n        }\n      }).catch(error => {\n        console.log('login error: ');\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.state.redirectTo) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: this.state.redirectTo\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          background: '#ECECEC',\n          padding: '20px',\n          alignContent: 'center',\n          opacity: .4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"register now!\"))));\n    }\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/Users/lauren/Documents/dockerized-app/src/components/Second.js"],"names":["React","Form","Icon","Input","Button","Checkbox","axios","Redirect","NormalLoginForm","Component","handleSubmit","e","preventDefault","post","username","state","password","then","response","console","log","status","props","updateUser","loggedIn","data","setState","redirectTo","catch","error","render","getFieldDecorator","form","pathname","background","padding","alignContent","opacity","rules","required","message","color","valuePropName","initialValue","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Form, Icon, Input, Button, Checkbox,\n} from 'antd';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault()\n    axios\n    .post('/user/login', {\n        username: this.state.username,\n        password: this.state.password\n    })\n    .then(response => {\n        console.log('login response: ')\n        console.log(response)\n        if (response.status === 200) {\n            // update App.js state\n            this.props.updateUser({\n                loggedIn: true,\n                username: response.data.username\n            })\n            // update the state to redirect to home\n            this.setState({\n                redirectTo: '/'\n            })\n        }\n    }).catch(error => {\n        console.log('login error: ')\n        console.log(error);\n        \n    })\n   \n   \n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\nif (this.state.redirectTo){\n  return <Redirect to={{pathname: this.state.redirectTo}}/>\n} else {\n  return (\n    <div className=\"container\" style={{ background: '#ECECEC', padding: '20px', alignContent: 'center', opacity: .4\n  }}>\n    <Form  onSubmit={this.handleSubmit} className=\"login-form\">\n      <Form.Item>\n        {getFieldDecorator('username', {\n          rules: [{ required: true, message: 'Please input your username!' }],\n        })(\n          <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('password', {\n          rules: [{ required: true, message: 'Please input your Password!' }],\n        })(\n          <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n        )}\n      </Form.Item>\n      <Form.Item>\n        {getFieldDecorator('remember', {\n          valuePropName: 'checked',\n          initialValue: true,\n        })(\n          <Checkbox>Remember me</Checkbox>\n        )}\n        <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        Or <a href=\"\">register now!</a>\n      </Form.Item>\n    </Form>\n    </div>\n  );\n}\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n\n"]},"metadata":{},"sourceType":"module"}