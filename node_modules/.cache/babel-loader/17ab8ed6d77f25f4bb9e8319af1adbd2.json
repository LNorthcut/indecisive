{"ast":null,"code":"// import React from 'react';\n// import { Tag, Input, Icon } from 'antd';\n// import { TweenOneGroup } from 'rc-tween-one';\n// class Quiz extends React.Component {\n//   state = {\n//     tags: ['Finances', 'Just Because', \"I'm 1 Person\"],\n//     inputVisible: false,\n//     inputValue: ''\n//   };\n//   handleClose = removedTag => {\n//     const tags = this.state.tags.filter(tag => tag !== removedTag);\n//     console.log(tags);\n//     this.setState({ tags });\n//   };\n//   showInput = () => {\n//     this.setState({ inputVisible: true }, () => this.input.focus());\n//   };\n//   handleInputChange = e => {\n//     this.setState({ inputValue: e.target.value });\n//   };\n//   handleInputConfirm = () => {\n//     const { inputValue } = this.state;\n//     let { tags } = this.state;\n//     if (inputValue && tags.indexOf(inputValue) === -1) {\n//       tags = [...tags, inputValue];\n//     }\n//     console.log(tags);\n//     this.setState({\n//       tags,\n//       inputVisible: false,\n//       inputValue: '',\n//     });\n//   };\n//   saveInputRef = input => (this.input = input);\n//   forMap = tag => {\n//     const tagElem = (\n//       <Tag\n//         closable\n//         onClose={e => {\n//           e.preventDefault();\n//           this.handleClose(tag);\n//         }}\n//       >\n//         {tag}\n//       </Tag>\n//     );\n//     return (\n//       <span key={tag} >\n//         {tagElem}\n//       </span>\n//     );\n//   };\n//   render() {\n//     const { tags, inputVisible, inputValue } = this.state;\n//     const tagChild = tags.map(this.forMap);\n//     return (\n//       <div>\n//         <div style={{ marginBottom: 16 }}>\n//         <br/>\n//         <br/>\n//         <h1>Why Not</h1>\n//           <TweenOneGroup\n//             enter={{\n//               scale: 0.8,\n//               opacity: 0,\n//               type: 'from',\n//               duration: 100,\n//               onComplete: e => {\n//                 e.target.style = '';\n//               },\n//             }}\n//             leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n//             appear={false}\n//           >\n//             {tagChild}\n//           </TweenOneGroup>\n//         </div>\n//         {inputVisible && (\n//           <Input\n//             ref={this.saveInputRef}\n//             type=\"text\"\n//             size=\"small\"\n//             style={{ width: 78 }}\n//             value={inputValue}\n//             onChange={this.handleInputChange}\n//             onBlur={this.handleInputConfirm}\n//             onPressEnter={this.handleInputConfirm}\n//           />\n//         )}\n//         {!inputVisible && (\n//           <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n//             <Icon type=\"plus\" /> New Tag\n//           </Tag>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// export default Quiz","map":{"version":3,"sources":["/Users/lauren/Documents/dockerized-app/src/components/Optionso/quiz.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import { Tag, Input, Icon } from 'antd';\n// import { TweenOneGroup } from 'rc-tween-one';\n\n// class Quiz extends React.Component {\n//   state = {\n//     tags: ['Finances', 'Just Because', \"I'm 1 Person\"],\n//     inputVisible: false,\n//     inputValue: ''\n//   };\n\n//   handleClose = removedTag => {\n//     const tags = this.state.tags.filter(tag => tag !== removedTag);\n//     console.log(tags);\n//     this.setState({ tags });\n//   };\n\n//   showInput = () => {\n//     this.setState({ inputVisible: true }, () => this.input.focus());\n//   };\n\n//   handleInputChange = e => {\n//     this.setState({ inputValue: e.target.value });\n//   };\n\n//   handleInputConfirm = () => {\n//     const { inputValue } = this.state;\n//     let { tags } = this.state;\n//     if (inputValue && tags.indexOf(inputValue) === -1) {\n//       tags = [...tags, inputValue];\n//     }\n//     console.log(tags);\n//     this.setState({\n//       tags,\n//       inputVisible: false,\n//       inputValue: '',\n//     });\n//   };\n\n//   saveInputRef = input => (this.input = input);\n\n//   forMap = tag => {\n//     const tagElem = (\n//       <Tag\n//         closable\n//         onClose={e => {\n//           e.preventDefault();\n//           this.handleClose(tag);\n//         }}\n//       >\n//         {tag}\n//       </Tag>\n//     );\n//     return (\n//       <span key={tag} >\n//         {tagElem}\n//       </span>\n//     );\n//   };\n\n//   render() {\n//     const { tags, inputVisible, inputValue } = this.state;\n//     const tagChild = tags.map(this.forMap);\n//     return (\n//       <div>\n//         <div style={{ marginBottom: 16 }}>\n//         <br/>\n//         <br/>\n//         <h1>Why Not</h1>\n//           <TweenOneGroup\n//             enter={{\n//               scale: 0.8,\n//               opacity: 0,\n//               type: 'from',\n//               duration: 100,\n//               onComplete: e => {\n//                 e.target.style = '';\n//               },\n//             }}\n//             leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n//             appear={false}\n//           >\n//             {tagChild}\n//           </TweenOneGroup>\n//         </div>\n//         {inputVisible && (\n//           <Input\n//             ref={this.saveInputRef}\n//             type=\"text\"\n//             size=\"small\"\n//             style={{ width: 78 }}\n//             value={inputValue}\n//             onChange={this.handleInputChange}\n//             onBlur={this.handleInputConfirm}\n//             onPressEnter={this.handleInputConfirm}\n//           />\n//         )}\n//         {!inputVisible && (\n//           <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}>\n//             <Icon type=\"plus\" /> New Tag\n//           </Tag>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default Quiz"]},"metadata":{},"sourceType":"module"}